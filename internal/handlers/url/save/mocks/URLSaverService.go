// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// URLSaverService is an autogenerated mock type for the URLSaverService type
type URLSaverService struct {
	mock.Mock
}

// SaveURL provides a mock function with given fields: url, alias, userID
func (_m *URLSaverService) SaveURL(url string, alias string, userID uint32) (string, error) {
	ret := _m.Called(url, alias, userID)

	if len(ret) == 0 {
		panic("no return value specified for SaveURL")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, uint32) (string, error)); ok {
		return rf(url, alias, userID)
	}
	if rf, ok := ret.Get(0).(func(string, string, uint32) string); ok {
		r0 = rf(url, alias, userID)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string, uint32) error); ok {
		r1 = rf(url, alias, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewURLSaverService creates a new instance of URLSaverService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewURLSaverService(t interface {
	mock.TestingT
	Cleanup(func())
}) *URLSaverService {
	mock := &URLSaverService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
